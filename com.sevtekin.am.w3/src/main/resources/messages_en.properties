header.text = ICEfaces2.0 ace and compat Components webapp Maven archetype

navigation.panelCollapsible1.header = Content
navigation.main.label = Home Page
navigation.content1.label = ACE FileEntry with Compat table
navigation.content2.label = ACE PanelTabSet with compat comps



content.splashPage.text1 = Choose which content to display in navigation pane, which is in ICEfaces Windows Scope.
content.splashPage.text2 = Note that this type of facelet composition inserts content into a template without changing the url.
content.splashPage.text3 = This archetype shows ace components in conjunction with compat components for ICEfaces2.0 and jsf2.0. Note the different namespaces for ice and ace when used together
content.content1.text = Content 1 Pane contains a form with the new ace FileEntry component and a form containing the compat dataTable to show the files uploaded
content.content1.fileEntryExample = Single Submit is false for checkboxButton so requires pushButton to submit to server
content.content1.dataTableExample = If singleSubmit=true for checkboxButton, then each click of a checkboxButton would submit itself to the server

content.fileEntry.text = File Entry
content.fileEntry.instructions = Browse for a file on your local system, then press the Upload button to upload the data to the server.
content.fileEntry.messages.label = Messages:
content.fileEntry.comp.label = File Entry
content.fileEntry.upload.label = Upload
content.fileEntry.history.label = Uploaded Files
content.fileEntry.history.name.label = Name
content.fileEntry.history.size.label = Size
content.fileEntry.history.content.label = Content Type
content.fileEntry.history.remove.label = Delete

content.content2.text =
content.content2.tabset.text=Content 2 Pane shows Tab Set (Client-Side)
content.content2.title = The opportunity to combine classic components with the new ace TabSet which maintains tab state on the client to allow forms on the individual panes will please users
content.content2.output = Values selected

# Tree component example
page.tree.synopsis = The tree component displays hierarchical data as a "tree" of branches and leaf nodes.
page.tree.explanation = Move nodes up and down using the commandButtons at the bottom of the page.
page.tree.path.label = Path\:
page.tree.move.up.label = Move Up
page.tree.move.down.label = Move Down
page.tree.employee.id.label = Employee ID\:
page.tree.employee.name.label = Name\:
page.tree.employee.phone.label = Phone\:

page.global.serverFeedback = Server-side Backing Bean Values\:

footer.text = Footer

# -- start of common template decorator content --
template.common.icesoft = ICEsoft Technologies Inc.
template.common.icefaces = ICEfaces
# template footer include.
template.footer.copyright = Copyright 2010&#160;
template.footer.poweredBy = Powered By&#160;